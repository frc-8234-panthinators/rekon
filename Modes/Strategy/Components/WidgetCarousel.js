import React, { useEffect } from 'react';
import { View, Text, ScrollView, StyleSheet, Pressable, Dimensions} from 'react-native';
import { GestureDetector, Gesture } from 'react-native-gesture-handler';
import Animated, { useSharedValue, withTiming, useAnimatedStyle} from 'react-native-reanimated';
import { useState } from 'react';
import * as Haptics from 'expo-haptics';
import { create } from 'mathjs';
import { useColors } from '../../../colors';
import { MaterialIcons } from '@expo/vector-icons';
import { Image } from 'expo-image';
import { SvgXml } from 'react-native-svg';

export default function WidgetCarousel(props) {
  const { Colors } = useColors();
  const [floatingWidgetVisible, setFloatingWidgetVisible] = useState(false);
  const floatingWidgetPosition = useSharedValue({ x: 0, y: 0 });
  const carouselPosition = useSharedValue(-220)
  const [hasHeld, setHasHeld] = useState(false);
  const [selectedWidget, setSelectedWidget] = useState('line');
  const [carouselHidden, setCarouselHidden] = useState(true);
  const floatingWidget = props.floatingWidget;
  const endDrag = props.onEnd;
  const update = props.update;
  const startDrag = props.onStart;
  const leftCarousel = props.leftCarousel;
  const isCarouselHidden = props.isCarouselHidden;

  const lineXML = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" zoomAndPan="magnify" viewBox="0 0 150 149.999998" height="200" preserveAspectRatio="xMidYMid meet" version="1.0"><defs><clipPath id="9abf5df13e"><path d="M 8.421875 8 L 20 8 L 20 22 L 8.421875 22 Z M 8.421875 8 " clip-rule="nonzero"/></clipPath><clipPath id="62110d5534"><path d="M 128 125 L 141.921875 125 L 141.921875 136 L 128 136 Z M 128 125 " clip-rule="nonzero"/></clipPath><clipPath id="cb722d7307"><path d="M 128 131 L 141.921875 131 L 141.921875 142 L 128 142 Z M 128 131 " clip-rule="nonzero"/></clipPath></defs><path fill="${Colors.secondary}" d="M 135.003906 132.175781 L 18.589844 132.175781 L 18.589844 15.765625 C 18.589844 9.242188 15.160156 15.839844 15.160156 15.839844 L 15.160156 133.796875 C 15.167969 133.824219 15.179688 133.84375 15.1875 133.867188 C 15.097656 134.226562 15.226562 134.617188 15.765625 135.003906 C 16.152344 135.539062 16.539062 135.667969 16.898438 135.578125 C 16.921875 135.589844 16.945312 135.597656 16.96875 135.609375 L 134.925781 135.609375 C 134.925781 135.605469 141.523438 132.175781 135.003906 132.175781 Z M 135.003906 132.175781 " fill-opacity="1" fill-rule="nonzero"/><g clip-path="url(#9abf5df13e)"><path fill="${Colors.secondary}" d="M 10.785156 21.441406 C 10.347656 21.441406 9.90625 21.308594 9.527344 21.023438 C 8.589844 20.328125 8.398438 19.003906 9.09375 18.070312 C 10.433594 16.273438 14.105469 11.226562 15.011719 9.445312 C 15.539062 8.40625 16.8125 7.992188 17.851562 8.523438 C 18.890625 9.050781 19.300781 10.324219 18.773438 11.363281 C 17.539062 13.78125 12.996094 19.90625 12.480469 20.59375 C 12.066406 21.148438 11.429688 21.441406 10.785156 21.441406 Z M 10.785156 21.441406 " fill-opacity="1" fill-rule="nonzero"/></g><path fill="${Colors.secondary}" d="M 22.996094 21.441406 C 22.351562 21.441406 21.71875 21.148438 21.304688 20.59375 C 20.789062 19.902344 16.242188 13.78125 15.011719 11.363281 C 14.480469 10.324219 14.894531 9.050781 15.933594 8.523438 C 16.972656 7.992188 18.242188 8.40625 18.773438 9.445312 C 19.679688 11.226562 23.351562 16.273438 24.6875 18.070312 C 25.382812 19.003906 25.191406 20.328125 24.257812 21.023438 C 23.878906 21.308594 23.4375 21.441406 22.996094 21.441406 Z M 22.996094 21.441406 " fill-opacity="1" fill-rule="nonzero"/><g clip-path="url(#62110d5534)"><path fill="${Colors.secondary}" d="M 139.085938 135.890625 C 138.765625 135.890625 138.4375 135.816406 138.132812 135.660156 C 135.710938 134.425781 129.589844 129.878906 128.898438 129.367188 C 127.964844 128.667969 127.769531 127.347656 128.46875 126.410156 C 129.164062 125.476562 130.488281 125.285156 131.421875 125.980469 C 133.21875 127.320312 138.265625 130.988281 140.046875 131.894531 C 141.085938 132.425781 141.5 133.695312 140.96875 134.734375 C 140.597656 135.46875 139.855469 135.890625 139.085938 135.890625 Z M 139.085938 135.890625 " fill-opacity="1" fill-rule="nonzero"/></g><g clip-path="url(#cb722d7307)"><path fill="${Colors.secondary}" d="M 130.164062 141.992188 C 129.519531 141.992188 128.882812 141.699219 128.46875 141.144531 C 127.769531 140.207031 127.964844 138.886719 128.898438 138.1875 C 129.589844 137.675781 135.710938 133.128906 138.128906 131.898438 C 139.167969 131.367188 140.441406 131.78125 140.96875 132.820312 C 141.5 133.859375 141.085938 135.128906 140.046875 135.660156 C 138.265625 136.566406 133.21875 140.238281 131.421875 141.574219 C 131.042969 141.855469 130.601562 141.992188 130.164062 141.992188 Z M 130.164062 141.992188 " fill-opacity="1" fill-rule="nonzero"/></g><path fill="${Colors.secondary}" d="M 33.3125 103.617188 C 33.3125 103.617188 26.636719 103.3125 26.261719 110.320312 C 26.261719 110.320312 25.453125 117.566406 33.246094 117.871094 C 33.246094 117.871094 40.339844 117.882812 40.132812 110.382812 C 40.132812 110.382812 40.757812 103.988281 33.3125 103.617188 Z M 33.3125 103.617188 " fill-opacity="1" fill-rule="nonzero"/><path fill="${Colors.secondary}" d="M 58.398438 72.699219 C 58.398438 72.699219 51.71875 72.390625 51.34375 79.398438 C 51.34375 79.398438 50.535156 86.644531 58.328125 86.953125 C 58.328125 86.953125 65.421875 86.960938 65.214844 79.460938 C 65.214844 79.460938 65.839844 73.066406 58.398438 72.699219 Z M 58.398438 72.699219 " fill-opacity="1" fill-rule="nonzero"/><path fill="${Colors.secondary}" d="M 98.527344 92.046875 C 98.527344 92.046875 91.847656 91.738281 91.472656 98.746094 C 91.472656 98.746094 90.664062 105.992188 98.457031 106.300781 C 98.457031 106.300781 105.554688 106.308594 105.34375 98.808594 C 105.34375 98.808594 105.972656 92.417969 98.527344 92.046875 Z M 98.527344 92.046875 " fill-opacity="1" fill-rule="nonzero"/><path fill="${Colors.secondary}" d="M 119.972656 44.820312 C 119.972656 44.820312 113.292969 44.511719 112.917969 51.519531 C 112.917969 51.519531 112.109375 58.765625 119.902344 59.074219 C 119.902344 59.074219 127 59.082031 126.789062 51.582031 C 126.789062 51.582031 127.417969 45.1875 119.972656 44.820312 Z M 119.972656 44.820312 " fill-opacity="1" fill-rule="nonzero"/><path fill="${Colors.secondary}" d="M 35.234375 112.402344 L 31.148438 109.085938 L 57.542969 76.550781 L 97.121094 95.632812 L 117.453125 50.855469 L 122.246094 53.035156 L 99.6875 102.710938 L 59.007812 83.097656 Z M 35.234375 112.402344 " fill-opacity="1" fill-rule="nonzero"/></svg>`
  const pieXML = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" zoomAndPan="magnify" viewBox="0 0 150 149.999998" height="200" preserveAspectRatio="xMidYMid meet" version="1.0"><path fill="${Colors.secondary}" d="M 75 8.175781 C 76.40625 8.175781 77.8125 8.222656 79.214844 8.308594 C 80.617188 8.398438 82.015625 8.53125 83.414062 8.710938 C 84.808594 8.886719 86.195312 9.105469 87.578125 9.371094 C 88.957031 9.636719 90.328125 9.945312 91.691406 10.296875 C 93.050781 10.648438 94.402344 11.039062 95.738281 11.476562 C 97.074219 11.914062 98.398438 12.390625 99.703125 12.910156 C 101.011719 13.429688 102.300781 13.992188 103.570312 14.59375 C 104.839844 15.195312 106.09375 15.835938 107.324219 16.515625 C 108.554688 17.195312 109.761719 17.914062 110.949219 18.671875 C 112.132812 19.425781 113.292969 20.21875 114.429688 21.050781 C 115.5625 21.878906 116.671875 22.746094 117.753906 23.644531 C 118.832031 24.542969 119.886719 25.476562 120.90625 26.441406 C 121.929688 27.410156 122.917969 28.40625 123.878906 29.433594 C 124.835938 30.464844 125.761719 31.519531 126.65625 32.609375 C 127.546875 33.695312 128.402344 34.808594 129.226562 35.949219 C 130.046875 37.089844 130.832031 38.257812 131.582031 39.449219 C 132.328125 40.640625 133.039062 41.851562 133.710938 43.085938 C 134.382812 44.324219 135.011719 45.578125 135.605469 46.855469 C 136.199219 48.128906 136.75 49.421875 137.261719 50.734375 C 137.769531 52.042969 138.238281 53.367188 138.667969 54.707031 C 139.09375 56.046875 139.476562 57.398438 139.820312 58.761719 C 140.160156 60.128906 140.460938 61.5 140.714844 62.882812 C 140.96875 64.265625 141.179688 65.65625 141.347656 67.054688 C 141.515625 68.449219 141.636719 69.847656 141.71875 71.253906 C 141.796875 72.65625 141.832031 74.0625 141.820312 75.46875 C 141.8125 76.875 141.757812 78.277344 141.660156 79.683594 C 141.558594 81.085938 141.417969 82.484375 141.230469 83.875 C 141.042969 85.269531 140.8125 86.65625 140.539062 88.035156 C 140.265625 89.414062 139.945312 90.785156 139.585938 92.144531 C 139.226562 93.503906 138.820312 94.851562 138.375 96.183594 C 137.929688 97.515625 137.441406 98.835938 136.914062 100.136719 C 136.386719 101.441406 135.816406 102.726562 135.203125 103.992188 C 134.59375 105.261719 133.945312 106.507812 133.257812 107.734375 C 132.566406 108.957031 131.839844 110.160156 131.074219 111.339844 C 130.3125 112.523438 129.511719 113.675781 128.671875 114.804688 C 127.835938 115.9375 126.960938 117.039062 126.054688 118.113281 C 125.148438 119.1875 124.207031 120.230469 123.234375 121.246094 C 122.261719 122.261719 121.257812 123.246094 120.222656 124.195312 C 119.1875 125.148438 118.121094 126.066406 117.027344 126.949219 C 115.933594 127.835938 114.816406 128.683594 113.667969 129.496094 C 112.519531 130.3125 111.351562 131.089844 110.152344 131.828125 C 108.957031 132.566406 107.738281 133.269531 106.5 133.933594 C 105.261719 134.59375 104 135.21875 102.71875 135.800781 C 101.441406 136.386719 100.144531 136.925781 98.832031 137.429688 C 97.515625 137.929688 96.1875 138.390625 94.84375 138.808594 C 93.503906 139.226562 92.148438 139.601562 90.78125 139.933594 C 89.414062 140.265625 88.039062 140.554688 86.65625 140.796875 C 85.269531 141.042969 83.878906 141.246094 82.480469 141.402344 C 81.085938 141.558594 79.683594 141.671875 78.277344 141.742188 C 76.875 141.8125 75.46875 141.835938 74.0625 141.816406 C 72.65625 141.796875 71.253906 141.730469 69.851562 141.625 C 68.449219 141.515625 67.050781 141.363281 65.660156 141.167969 C 64.265625 140.96875 62.882812 140.730469 61.503906 140.445312 C 60.128906 140.160156 58.761719 139.835938 57.402344 139.464844 C 56.046875 139.09375 54.703125 138.679688 53.371094 138.226562 C 52.042969 137.769531 50.726562 137.273438 49.429688 136.734375 C 48.128906 136.199219 46.847656 135.621094 45.585938 135 C 44.324219 134.382812 43.082031 133.722656 41.859375 133.027344 C 40.636719 132.328125 39.441406 131.59375 38.265625 130.820312 C 37.089844 130.046875 35.941406 129.238281 34.820312 128.390625 C 33.695312 127.546875 32.597656 126.667969 31.53125 125.75 C 30.464844 124.835938 29.425781 123.890625 28.417969 122.910156 C 27.410156 121.929688 26.433594 120.917969 25.488281 119.875 C 24.542969 118.832031 23.632812 117.761719 22.757812 116.664062 L 75 75 Z M 75 8.175781 " fill-opacity="1" fill-rule="nonzero"/><path fill="${Colors.secondaryBright}" d="M 22.757812 116.664062 C 20.804688 114.21875 19.035156 111.644531 17.445312 108.953125 C 15.855469 106.257812 14.460938 103.464844 13.265625 100.574219 C 12.066406 97.683594 11.078125 94.722656 10.296875 91.691406 C 9.515625 88.664062 8.949219 85.59375 8.597656 82.484375 C 8.246094 79.375 8.117188 76.253906 8.203125 73.128906 C 8.292969 70 8.597656 66.894531 9.121094 63.808594 C 9.644531 60.722656 10.382812 57.691406 11.332031 54.710938 C 12.28125 51.730469 13.4375 48.828125 14.792969 46.007812 C 16.152344 43.191406 17.699219 40.480469 19.4375 37.878906 C 21.175781 35.277344 23.085938 32.808594 25.171875 30.476562 C 27.257812 28.144531 29.492188 25.96875 31.882812 23.949219 C 34.273438 21.929688 36.792969 20.085938 39.445312 18.421875 C 42.09375 16.757812 44.847656 15.285156 47.703125 14.007812 C 50.558594 12.730469 53.488281 11.65625 56.496094 10.789062 C 59.503906 9.925781 62.554688 9.273438 65.652344 8.835938 C 68.75 8.398438 71.863281 8.175781 74.992188 8.175781 L 75 75 Z M 22.757812 116.664062 " fill-opacity="1" fill-rule="nonzero"/></svg>`
  const barXML = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" zoomAndPan="magnify" viewBox="0 0 150 149.999998" height="200" preserveAspectRatio="xMidYMid meet" version="1.0"><defs><clipPath id="3711da4edc"><path d="M 8.175781 121.777344 L 28.382812 121.777344 L 28.382812 141.824219 L 8.175781 141.824219 Z M 8.175781 121.777344 " clip-rule="nonzero"/></clipPath><clipPath id="5db8990946"><path d="M 29.445312 101.730469 L 49.652344 101.730469 L 49.652344 141.824219 L 29.445312 141.824219 Z M 29.445312 101.730469 " clip-rule="nonzero"/></clipPath><clipPath id="4ef09b9d0d"><path d="M 54.261719 88.363281 L 74.46875 88.363281 L 74.46875 141.824219 L 54.261719 141.824219 Z M 54.261719 88.363281 " clip-rule="nonzero"/></clipPath><clipPath id="4d55efdf81"><path d="M 75.53125 48.269531 L 95.738281 48.269531 L 95.738281 141.824219 L 75.53125 141.824219 Z M 75.53125 48.269531 " clip-rule="nonzero"/></clipPath><clipPath id="91bfb3c343"><path d="M 100.347656 34.90625 L 120.554688 34.90625 L 120.554688 141.824219 L 100.347656 141.824219 Z M 100.347656 34.90625 " clip-rule="nonzero"/></clipPath><clipPath id="d83c340a95"><path d="M 121.617188 21.542969 L 141.824219 21.542969 L 141.824219 141.824219 L 121.617188 141.824219 Z M 121.617188 21.542969 " clip-rule="nonzero"/></clipPath></defs><g clip-path="url(#3711da4edc)"><path fill="${Colors.secondaryBright}" d="M 9.792969 121.777344 L 26.765625 121.777344 C 26.980469 121.777344 27.1875 121.816406 27.386719 121.898438 C 27.582031 121.980469 27.757812 122.097656 27.910156 122.25 C 28.0625 122.402344 28.179688 122.574219 28.261719 122.773438 C 28.34375 122.972656 28.382812 123.179688 28.382812 123.390625 L 28.382812 141.824219 C 28.382812 142.035156 28.34375 142.242188 28.261719 142.441406 C 28.179688 142.640625 28.0625 142.8125 27.910156 142.964844 C 27.757812 143.117188 27.582031 143.234375 27.386719 143.316406 C 27.1875 143.398438 26.980469 143.4375 26.765625 143.4375 L 9.792969 143.4375 C 9.578125 143.4375 9.375 143.398438 9.175781 143.316406 C 8.976562 143.234375 8.800781 143.117188 8.652344 142.964844 C 8.5 142.8125 8.382812 142.640625 8.300781 142.441406 C 8.21875 142.242188 8.175781 142.035156 8.175781 141.824219 L 8.175781 123.390625 C 8.175781 123.179688 8.21875 122.972656 8.300781 122.773438 C 8.382812 122.574219 8.5 122.402344 8.652344 122.25 C 8.800781 122.097656 8.976562 121.980469 9.175781 121.898438 C 9.375 121.816406 9.578125 121.777344 9.792969 121.777344 Z M 9.792969 121.777344 " fill-opacity="1" fill-rule="nonzero"/></g><g clip-path="url(#5db8990946)"><path fill="${Colors.secondary}" d="M 31.0625 101.730469 L 48.035156 101.730469 C 48.25 101.730469 48.457031 101.769531 48.65625 101.851562 C 48.855469 101.933594 49.027344 102.050781 49.179688 102.203125 C 49.332031 102.355469 49.449219 102.527344 49.53125 102.726562 C 49.613281 102.925781 49.652344 103.132812 49.652344 103.34375 L 49.652344 141.824219 C 49.652344 142.035156 49.613281 142.242188 49.53125 142.441406 C 49.449219 142.640625 49.332031 142.8125 49.179688 142.964844 C 49.027344 143.117188 48.855469 143.234375 48.65625 143.316406 C 48.457031 143.398438 48.25 143.4375 48.035156 143.4375 L 31.0625 143.4375 C 30.847656 143.4375 30.644531 143.398438 30.445312 143.316406 C 30.246094 143.234375 30.070312 143.117188 29.921875 142.964844 C 29.769531 142.8125 29.652344 142.640625 29.570312 142.441406 C 29.488281 142.242188 29.445312 142.035156 29.445312 141.824219 L 29.445312 103.34375 C 29.445312 103.132812 29.488281 102.925781 29.570312 102.726562 C 29.652344 102.527344 29.769531 102.355469 29.921875 102.203125 C 30.070312 102.050781 30.246094 101.933594 30.445312 101.851562 C 30.644531 101.769531 30.847656 101.730469 31.0625 101.730469 Z M 31.0625 101.730469 " fill-opacity="1" fill-rule="nonzero"/></g><g clip-path="url(#4ef09b9d0d)"><path fill="${Colors.secondaryBright}" d="M 55.878906 88.363281 L 72.851562 88.363281 C 73.066406 88.363281 73.273438 88.40625 73.46875 88.488281 C 73.667969 88.570312 73.84375 88.6875 73.996094 88.839844 C 74.144531 88.988281 74.261719 89.164062 74.34375 89.363281 C 74.425781 89.558594 74.46875 89.765625 74.46875 89.980469 L 74.46875 141.824219 C 74.46875 142.035156 74.425781 142.242188 74.34375 142.441406 C 74.261719 142.640625 74.144531 142.8125 73.996094 142.964844 C 73.84375 143.117188 73.667969 143.234375 73.46875 143.316406 C 73.273438 143.398438 73.066406 143.4375 72.851562 143.4375 L 55.878906 143.4375 C 55.664062 143.4375 55.457031 143.398438 55.261719 143.316406 C 55.0625 143.234375 54.886719 143.117188 54.734375 142.964844 C 54.582031 142.8125 54.46875 142.640625 54.386719 142.441406 C 54.304688 142.242188 54.261719 142.035156 54.261719 141.824219 L 54.261719 89.980469 C 54.261719 89.765625 54.304688 89.558594 54.386719 89.363281 C 54.46875 89.164062 54.582031 88.988281 54.734375 88.839844 C 54.886719 88.6875 55.0625 88.570312 55.261719 88.488281 C 55.457031 88.40625 55.664062 88.363281 55.878906 88.363281 Z M 55.878906 88.363281 " fill-opacity="1" fill-rule="nonzero"/></g><g clip-path="url(#4d55efdf81)"><path fill="${Colors.secondary}" d="M 77.148438 48.269531 L 94.121094 48.269531 C 94.335938 48.269531 94.542969 48.3125 94.738281 48.394531 C 94.9375 48.476562 95.113281 48.59375 95.265625 48.746094 C 95.417969 48.894531 95.53125 49.070312 95.613281 49.269531 C 95.695312 49.46875 95.738281 49.671875 95.738281 49.886719 L 95.738281 141.824219 C 95.738281 142.035156 95.695312 142.242188 95.613281 142.441406 C 95.53125 142.640625 95.417969 142.8125 95.265625 142.964844 C 95.113281 143.117188 94.9375 143.234375 94.738281 143.316406 C 94.542969 143.398438 94.335938 143.4375 94.121094 143.4375 L 77.148438 143.4375 C 76.933594 143.4375 76.726562 143.398438 76.53125 143.316406 C 76.332031 143.234375 76.15625 143.117188 76.003906 142.964844 C 75.855469 142.8125 75.738281 142.640625 75.65625 142.441406 C 75.574219 142.242188 75.53125 142.035156 75.53125 141.824219 L 75.53125 49.886719 C 75.53125 49.671875 75.574219 49.46875 75.65625 49.269531 C 75.738281 49.070312 75.855469 48.894531 76.003906 48.746094 C 76.15625 48.59375 76.332031 48.476562 76.53125 48.394531 C 76.726562 48.3125 76.933594 48.269531 77.148438 48.269531 Z M 77.148438 48.269531 " fill-opacity="1" fill-rule="nonzero"/></g><g clip-path="url(#91bfb3c343)"><path fill="${Colors.secondaryBright}" d="M 101.964844 34.90625 L 118.9375 34.90625 C 119.152344 34.90625 119.355469 34.949219 119.554688 35.03125 C 119.753906 35.113281 119.929688 35.226562 120.078125 35.378906 C 120.230469 35.53125 120.347656 35.707031 120.429688 35.90625 C 120.511719 36.101562 120.554688 36.308594 120.554688 36.523438 L 120.554688 141.824219 C 120.554688 142.035156 120.511719 142.242188 120.429688 142.441406 C 120.347656 142.640625 120.230469 142.8125 120.078125 142.964844 C 119.929688 143.117188 119.753906 143.234375 119.554688 143.316406 C 119.355469 143.398438 119.152344 143.4375 118.9375 143.4375 L 101.964844 143.4375 C 101.75 143.4375 101.542969 143.398438 101.34375 143.316406 C 101.144531 143.234375 100.972656 143.117188 100.820312 142.964844 C 100.667969 142.8125 100.550781 142.640625 100.46875 142.441406 C 100.386719 142.242188 100.347656 142.035156 100.347656 141.824219 L 100.347656 36.523438 C 100.347656 36.308594 100.386719 36.101562 100.46875 35.90625 C 100.550781 35.707031 100.667969 35.53125 100.820312 35.378906 C 100.972656 35.226562 101.144531 35.113281 101.34375 35.03125 C 101.542969 34.949219 101.75 34.90625 101.964844 34.90625 Z M 101.964844 34.90625 " fill-opacity="1" fill-rule="nonzero"/></g><g clip-path="url(#d83c340a95)"><path fill="${Colors.secondary}" d="M 123.234375 21.542969 L 140.207031 21.542969 C 140.421875 21.542969 140.625 21.582031 140.824219 21.664062 C 141.023438 21.746094 141.199219 21.863281 141.347656 22.015625 C 141.5 22.167969 141.617188 22.339844 141.699219 22.539062 C 141.78125 22.738281 141.824219 22.945312 141.824219 23.160156 L 141.824219 141.824219 C 141.824219 142.035156 141.78125 142.242188 141.699219 142.441406 C 141.617188 142.640625 141.5 142.8125 141.347656 142.964844 C 141.199219 143.117188 141.023438 143.234375 140.824219 143.316406 C 140.625 143.398438 140.421875 143.4375 140.207031 143.4375 L 123.234375 143.4375 C 123.019531 143.4375 122.8125 143.398438 122.613281 143.316406 C 122.417969 143.234375 122.242188 143.117188 122.089844 142.964844 C 121.9375 142.8125 121.820312 142.640625 121.738281 142.441406 C 121.65625 142.242188 121.617188 142.035156 121.617188 141.824219 L 121.617188 23.160156 C 121.617188 22.945312 121.65625 22.738281 121.738281 22.539062 C 121.820312 22.339844 121.9375 22.167969 122.089844 22.015625 C 122.242188 21.863281 122.417969 21.746094 122.613281 21.664062 C 122.8125 21.582031 123.019531 21.542969 123.234375 21.542969 Z M 123.234375 21.542969 " fill-opacity="1" fill-rule="nonzero"/></g></svg>`

  useEffect(() => {
    isCarouselHidden(carouselHidden);
    if (carouselHidden) {
      carouselPosition.value = withTiming(-220);
    } else {
      carouselPosition.value = withTiming(0);
    }
  }, [carouselHidden])
  
  const dragGesture = Gesture.LongPress({ minDurationMs: 1000 })
    .runOnJS(true)
    .shouldCancelWhenOutside(false)
    .maxDistance(10000000000)
    .onStart((event) => {
      Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);
      startDrag();
      setFloatingWidgetVisible(true);
      floatingWidgetPosition.value = { x: event.absoluteX, y: event.absoluteY - (Dimensions.get('window').height - 300) + carouselPosition.value};
      setHasHeld(true);
      floatingWidget.value = { x: event.absoluteX, y: event.absoluteY - (Dimensions.get('window').height - 300) + carouselPosition.value, type: selectedWidget, held: true }
    })
    .onTouchesMove((event) => {
      if (!hasHeld) return;
      floatingWidgetPosition.value = { x: event.allTouches[0].absoluteX, y: event.allTouches[0].absoluteY - (Dimensions.get('window').height - 300) + carouselPosition.value};
      floatingWidget.value = { x: event.allTouches[0].absoluteX, y: event.allTouches[0].absoluteY - (Dimensions.get('window').height - 300) + carouselPosition.value, type: selectedWidget, held: true }

      if (!carouselHidden && event.allTouches[0].y < 0) {
        setCarouselHidden(true);
        leftCarousel();
      }
      update();
    })
    .onEnd(() => {
      setHasHeld(false);
      setFloatingWidgetVisible(false);
      floatingWidget.value = { x: 0, y: 0, type: null, held: false }
      endDrag(selectedWidget);
      setCarouselHidden(false);
    });

  const selectLine = Gesture.LongPress({ minDurationMs: 500 })
    .runOnJS(true)
    .onStart((event) => {
      console.log('line selected')
      setSelectedWidget('line');
    });

  const selectPie = Gesture.LongPress({ minDurationMs: 500 })
    .runOnJS(true)
    .onStart((event) => {
      console.log('pie selected')
      setSelectedWidget('pie');
    })
  
  const selectBar = Gesture.LongPress({ minDurationMs: 500 })
    .runOnJS(true)
    .onStart((event) => {
      console.log('bar selected')
      setSelectedWidget('bar');
    })

  const tapLine = Gesture.Tap()
    .runOnJS(true)
    .maxDuration(200)
    .onEnd((event) => {
      endDrag('line', 'tap');
    });

  const tapPie = Gesture.Tap()
    .runOnJS(true)
    .maxDuration(200)
    .onEnd((event) => {
      endDrag('pie', 'tap');
    });

  const tapBar = Gesture.Tap()
    .runOnJS(true)
    .maxDuration(200)
    .onEnd((event) => {
      endDrag('bar', 'tap');
    });

  const lineWidgetGesture = Gesture.Simultaneous(selectLine, dragGesture, tapLine);
  const pieWidgetGesture = Gesture.Simultaneous(selectPie, dragGesture, tapPie);
  const barWidgetGesture = Gesture.Simultaneous(selectBar, dragGesture, tapBar);

  const floatingWidgetStyle = useAnimatedStyle(() => {
    return {
      left: floatingWidgetPosition.value.x - 100,
      top: floatingWidgetPosition.value.y - 100,
    };
  });

  const carouselAnimationStyle = useAnimatedStyle(() => {
    return {
      bottom: carouselPosition.value
    }
  });

  const styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      position: 'absolute',
      minWidth: Dimensions.get('screen').width,
      backgroundColor: Colors.secondary
    },
    scrollContainer: {
      
    },
    widget: {
      width: 200,
      height: 200,
      backgroundColor: Colors.secondaryContainer,
      margin: 10,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 10
    },
    floatingWidget: {
      position: 'absolute',
      width: 200,
      height: 200,
      backgroundColor: Colors.secondaryContainer,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 10,
    },
    openButton: {
      width: '100%',
      height: 30,
      alignItems: 'center',
      backgroundColor: Colors.accent,
      justifyContent: 'center',
    }
  });
  

  return (
    <Animated.View style={[styles.container, carouselAnimationStyle]}>
      <Pressable hitSlop={30} style={styles.openButton} onPress={() => setCarouselHidden(!carouselHidden)}>
        <MaterialIcons name={carouselHidden ? 'expand-less' : 'expand-more'} size={30} color={Colors.onAccent}></MaterialIcons>
      </Pressable>
      <ScrollView style={styles.scrollContainer} horizontal={true} showsHorizontalScrollIndicator={false}>
        <GestureDetector gesture={lineWidgetGesture}>
          <View style={[styles.widget,]}>
            <SvgXml xml={lineXML} width='200' height='200'></SvgXml>
          </View>
        </GestureDetector>
        <GestureDetector gesture={pieWidgetGesture}>
          <View style={styles.widget}>
            <SvgXml xml={pieXML} width='200' height='200'></SvgXml>
          </View>
        </GestureDetector>
        <GestureDetector gesture={barWidgetGesture}>
          <View style={styles.widget}>
            <SvgXml xml={barXML} width='200' height='200'></SvgXml>
          </View>
        </GestureDetector>
        <View style={styles.widget}>
          <Text>Widget 4</Text>
        </View>
        <View style={styles.widget}>
          <Text>Widget 5</Text>
        </View>
      </ScrollView>
      {floatingWidgetVisible && (
        <Animated.View style={[styles.floatingWidget, floatingWidgetStyle]}>
          {selectedWidget == 'line' && (
            <SvgXml xml={lineXML} width='200' height='200'></SvgXml>
          )}
          {selectedWidget == 'pie' && (
            <SvgXml xml={pieXML} width='200' height='200'></SvgXml>
          )}
          {selectedWidget == 'bar' && (
            <SvgXml xml={barXML} width='200' height='200'></SvgXml>
          )}
        </Animated.View>
      )}
    </Animated.View>
  );
};